{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-main/property-list/property-list.component.css","webpack:///./src/app/app-main/property-list/property-list.component.html","webpack:///./src/app/app-main/property-list/property-list.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/map/map-main/map-main.component.css","webpack:///./src/app/map/map-main/map-main.component.html","webpack:///./src/app/map/map-main/map-main.component.ts","webpack:///./src/app/material.module.ts","webpack:///./src/app/services/datasource/datasource.service.ts","webpack:///./src/app/services/datasource/google-map-geocoding.service.ts","webpack:///./src/app/services/get-property-bylocation.service.ts","webpack:///./src/app/services/search-query-details.service.ts","webpack:///./src/app/services/user-booking.service.ts","webpack:///./src/app/services/user-location.service.ts","webpack:///./src/app/store/app-store.service.ts","webpack:///./src/endpoints/dev/bookings.ts","webpack:///./src/endpoints/dev/maps.ts","webpack:///./src/endpoints/dev/userdata.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".card-header-image {\\n  background-image: url('https://icon-library.net/images/hotel-vector-icon/hotel-vector-icon-3.jpg');\\n  background-size: cover;\\n}\\n\\n.property-card {\\n  margin-bottom: 1rem;\\n}\\n\\n.property-card:last-child {\\n  margin-bottom: 0;\\n}\\n\\n.book-property-btn {\\n  position: absolute;\\n  right: 0;\\n  top: calc(50% - 15px);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLW1haW4vcHJvcGVydHktbGlzdC9wcm9wZXJ0eS1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxrR0FBa0c7RUFDbEcsc0JBQXNCO0FBQ3hCOztBQUVBO0VBQ0UsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLFFBQVE7RUFDUixxQkFBcUI7QUFDdkIiLCJmaWxlIjoic3JjL2FwcC9hcHAtbWFpbi9wcm9wZXJ0eS1saXN0L3Byb3BlcnR5LWxpc3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jYXJkLWhlYWRlci1pbWFnZSB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnaHR0cHM6Ly9pY29uLWxpYnJhcnkubmV0L2ltYWdlcy9ob3RlbC12ZWN0b3ItaWNvbi9ob3RlbC12ZWN0b3ItaWNvbi0zLmpwZycpO1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xufVxuXG4ucHJvcGVydHktY2FyZCB7XG4gIG1hcmdpbi1ib3R0b206IDFyZW07XG59XG5cbi5wcm9wZXJ0eS1jYXJkOmxhc3QtY2hpbGQge1xuICBtYXJnaW4tYm90dG9tOiAwO1xufVxuXG4uYm9vay1wcm9wZXJ0eS1idG4ge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHJpZ2h0OiAwO1xuICB0b3A6IGNhbGMoNTAlIC0gMTVweCk7XG59Il19 */\"","module.exports = \"<div *ngIf=\\\"isLoading == false\\\">\\n  <div class=\\\"property-list-wrapper\\\" *ngIf=\\\"properties.length > 1\\\">\\n    <mat-card class=\\\"property-card\\\" *ngFor=\\\"let property of properties\\\">\\n      <mat-card-header class=\\\"relative-position\\\">\\n        <div mat-card-avatar class=\\\"card-header-image\\\"></div>\\n        <mat-card-title>{{property.property_name}}</mat-card-title>\\n        <mat-card-subtitle>{{property.property_location}}</mat-card-subtitle>\\n        <button class=\\\"book-property-btn\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"bookProperty(property)\\\">Book</button>\\n      </mat-card-header>\\n    </mat-card>\\n  </div>\\n  <mat-card class=\\\"property-card\\\" *ngIf=\\\"properties.length == 0\\\">\\n    <mat-card-header class=\\\"relative-position\\\">\\n      <mat-card-subtitle>\\n        <h3>No properties in this area.</h3>\\n      </mat-card-subtitle>\\n    </mat-card-header>\\n  </mat-card>\\n\\n</div>\\n<mat-card class=\\\"property-card\\\" *ngIf=\\\"isLoading\\\">\\n  <mat-card-header class=\\\"relative-position\\\">\\n    <mat-card-subtitle>\\n      <h5>Loading Properties Near You.....</h5>\\n    </mat-card-subtitle>\\n  </mat-card-header>\\n</mat-card>\"","import { Component, OnInit } from '@angular/core';\nimport { GetPropertyByLocationService } from 'src/app/services/get-property-bylocation.service';\nimport { AppStoreService } from 'src/app/store/app-store.service';\nimport { UserBookingService } from 'src/app/services/user-booking.service';\n\n@Component({\n  selector: 'app-property-list',\n  templateUrl: './property-list.component.html',\n  styleUrls: ['./property-list.component.css']\n})\nexport class PropertyListComponent implements OnInit {\n\n  constructor(\n    private propertiesNearUserService: GetPropertyByLocationService,\n    private store: AppStoreService,\n    private userBooking: UserBookingService\n  ) { }\n\n  isLoading = true;\n  properties;\n  ngOnInit() {\n    this.store.stateChanged.subscribe(\n      (state) => {\n        if (state.geoCodingData) {\n          const geoCodingData = state.geoCodingData;\n          this.getPropertiesOnLocation(geoCodingData.lat, geoCodingData.lng);\n        }\n\n      }\n    );\n  }\n\n  getPropertiesOnLocation(lat, long) {\n    this.propertiesNearUserService.getPropertyBasedOnUserLocation(lat, long).subscribe(\n      (data) => {\n        this.isLoading = false;\n        this.properties = data;\n      }\n    );\n  }\n\n  bookProperty(propertyInformation) {\n    this.userBooking.bookNewProperty(propertyInformation.idproperty).subscribe(\n      (bookingConfirmation) => {\n        console.log(bookingConfirmation);\n      }\n    );\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"div#userApp {\\n  overflow: scroll;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBZ0I7QUFDbEIiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImRpdiN1c2VyQXBwIHtcbiAgb3ZlcmZsb3c6IHNjcm9sbDtcbn1cbiJdfQ== */\"","module.exports = \"<div class=\\\"flex-container\\\">\\n  <div class=\\\"flex\\\" id=\\\"map\\\">\\n    <app-map-main></app-map-main>\\n  </div>\\n  <div class=\\\"flex\\\" id=\\\"userApp\\\">\\n    <app-property-list></app-property-list>\\n  </div>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'public';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AgmCoreModule } from '@agm/core';\nimport { MaterialModule } from './material.module';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { MapMainComponent } from './map/map-main/map-main.component';\nimport { PropertyListComponent } from './app-main/property-list/property-list.component';\nimport { UserLocationService } from './services/user-location.service';\nimport { environment } from 'src/environments/environment';\nimport { DataSourceService } from './services/datasource/datasource.service';\nimport { GetPropertyByLocationService } from './services/get-property-bylocation.service';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MapMainComponent,\n    PropertyListComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MaterialModule,\n    AgmCoreModule.forRoot({\n      apiKey: environment.GoogleMAPAPIKey\n    }),\n    BrowserAnimationsModule,\n  ],\n  providers: [UserLocationService, DataSourceService, GetPropertyByLocationService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"agm-map {\\n  height: 100%;\\n}\\n\\n:host {\\n  height: 100%;\\n}\\n\\n.map-wrapper {\\n  height: 100%;\\n  position: relative;\\n}\\n\\n.map-input {\\n  position: absolute;\\n  z-index: 1;\\n  background: #ffffffc4;\\n  width: 100%;\\n}\\n\\ninput#search-bar{\\n  margin: 0 auto;\\n  width: 100%;\\n  height: 45px;\\n  padding: 0 20px;\\n  font-size: 1rem;\\n  border: 1px solid #D0CFCE;\\n  outline: none;\\n  &:focus{\\n    border: 1px solid #008ABF;\\n    transition: 0.35s ease;\\n    color: #008ABF;\\n    &::-webkit-input-placeholder{\\n      transition: opacity 0.45s ease; \\n  \\t  opacity: 0;\\n     }\\n    &::-moz-placeholder {\\n      transition: opacity 0.45s ease; \\n  \\t  opacity: 0;\\n     }\\n    &:-ms-placeholder {\\n     transition: opacity 0.45s ease; \\n  \\t opacity: 0;\\n     }    \\n   }\\n }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFwL21hcC1tYWluL21hcC1tYWluLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxZQUFZO0VBQ1osa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLFVBQVU7RUFDVixxQkFBcUI7RUFDckIsV0FBVztBQUNiOztBQUVBO0VBQ0UsY0FBYztFQUNkLFdBQVc7RUFDWCxZQUFZO0VBQ1osZUFBZTtFQUNmLGVBQWU7RUFDZix5QkFBeUI7RUFDekIsYUFBYTtFQUNiO0lBQ0UseUJBQXlCO0lBQ3pCLHNCQUFzQjtJQUN0QixjQUFjO0lBQ2Q7TUFDRSw4QkFBOEI7S0FDL0IsVUFBVTtLQUNWO0lBQ0Q7TUFDRSw4QkFBOEI7S0FDL0IsVUFBVTtLQUNWO0lBQ0Q7S0FDQyw4QkFBOEI7SUFDL0IsVUFBVTtLQUNUO0dBQ0Y7Q0FDRiIsImZpbGUiOiJzcmMvYXBwL21hcC9tYXAtbWFpbi9tYXAtbWFpbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiYWdtLW1hcCB7XG4gIGhlaWdodDogMTAwJTtcbn1cblxuOmhvc3Qge1xuICBoZWlnaHQ6IDEwMCU7XG59XG5cbi5tYXAtd3JhcHBlciB7XG4gIGhlaWdodDogMTAwJTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG4ubWFwLWlucHV0IHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB6LWluZGV4OiAxO1xuICBiYWNrZ3JvdW5kOiAjZmZmZmZmYzQ7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG5pbnB1dCNzZWFyY2gtYmFye1xuICBtYXJnaW46IDAgYXV0bztcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogNDVweDtcbiAgcGFkZGluZzogMCAyMHB4O1xuICBmb250LXNpemU6IDFyZW07XG4gIGJvcmRlcjogMXB4IHNvbGlkICNEMENGQ0U7XG4gIG91dGxpbmU6IG5vbmU7XG4gICY6Zm9jdXN7XG4gICAgYm9yZGVyOiAxcHggc29saWQgIzAwOEFCRjtcbiAgICB0cmFuc2l0aW9uOiAwLjM1cyBlYXNlO1xuICAgIGNvbG9yOiAjMDA4QUJGO1xuICAgICY6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXJ7XG4gICAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuNDVzIGVhc2U7IFxuICBcdCAgb3BhY2l0eTogMDtcbiAgICAgfVxuICAgICY6Oi1tb3otcGxhY2Vob2xkZXIge1xuICAgICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjQ1cyBlYXNlOyBcbiAgXHQgIG9wYWNpdHk6IDA7XG4gICAgIH1cbiAgICAmOi1tcy1wbGFjZWhvbGRlciB7XG4gICAgIHRyYW5zaXRpb246IG9wYWNpdHkgMC40NXMgZWFzZTsgXG4gIFx0IG9wYWNpdHk6IDA7XG4gICAgIH0gICAgXG4gICB9XG4gfVxuIl19 */\"","module.exports = \"<div class=\\\"map-wrapper\\\">\\n  <div class=\\\"form-group map-input\\\">\\n    <input type=\\\"text\\\" id=\\\"search-bar\\\" [(ngModel)]=\\\"searchQuery\\\"\\n    placeholder=\\\"Enter place\\\"\\n    (ngModelChange)=\\\"onSearch($event)\\\">\\n  </div>\\n  <agm-map [latitude]=\\\"latitude\\\" [longitude]=\\\"longitude\\\" [zoom]=\\\"zoom\\\">\\n    <agm-marker [latitude]=\\\"latitude\\\" [longitude]=\\\"longitude\\\" [animation]=\\\"'BOUNCE'\\\">\\n        <agm-info-window>\\n            {{'USER'}}\\n          </agm-info-window>\\n    </agm-marker>\\n    <!--These are property markers-->\\n    <agm-marker [latitude]=\\\"location.property_lat\\\" [longitude]=\\\"location.property_long\\\"\\n      *ngFor=\\\"let location of properties\\\">\\n      <agm-info-window>\\n        {{location.property_name}}\\n      </agm-info-window>\\n    </agm-marker>\\n  </agm-map>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { UserLocationService } from '../../services/user-location.service';\nimport { environment } from 'src/environments/environment';\nimport { GetPropertyByLocationService } from 'src/app/services/get-property-bylocation.service';\nimport { SearchQueryDetailsService } from 'src/app/services/search-query-details.service';\nimport { AppStoreService } from 'src/app/store/app-store.service';\nimport { Subscription, Subject } from 'rxjs';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-map-main',\n  templateUrl: './map-main.component.html',\n  styleUrls: ['./map-main.component.css']\n})\nexport class MapMainComponent implements OnInit {\n  constructor(\n    private userLocation: UserLocationService,\n    private propertiesNearUserService: GetPropertyByLocationService,\n    private userQueryGeocodingService: SearchQueryDetailsService,\n    private store: AppStoreService,\n  ) { }\n  userLocationData;\n  latitude;\n  longitude;\n  zoom = 14;\n  properties;\n  searchQuery: string;\n  searchQueryChanged: Subject<string> = new Subject<string>();\n  storeSubscription$: Subscription;\n\n  ngOnInit() {\n    this.getUserLocationFromDevice();\n    this.searchOnUserInput();\n    // Store subscription\n    this.store.stateChanged.subscribe(\n      (state) => {\n        if (state.geoCodingData) {\n          const geoCodingData = state.geoCodingData;\n          this.latitude = geoCodingData.lat;\n          this.longitude = geoCodingData.lng;\n          this.getPropertyData(geoCodingData.lat, geoCodingData.lng);\n        }\n\n      }\n    );\n  }\n\n\n  onSearch(searchQuery) {\n    this.searchQueryChanged.next(searchQuery);\n  }\n\n  private getUserLocationFromDevice() {\n    this.userLocation.getCurrentPosition().subscribe(\n      userLocationData => {\n        console.log(userLocationData);\n        this.latitude = userLocationData.coords.latitude;\n        this.longitude = userLocationData.coords.longitude;\n        this.userLocationData = userLocationData;\n        const storeGeoCodingData = {\n          geoCodingData: {\n            lat: userLocationData.coords.latitude,\n            lng: userLocationData.coords.longitude\n          }\n        }\n        // Once the location is received now call the backend API\n        this.store.add(storeGeoCodingData.geoCodingData);\n        this.getPropertyData(userLocationData.coords.latitude, userLocationData.coords.longitude);\n      },\n      err => {\n        // This is hard coded because the database consists only these data.\n        const defaultLocation = {\n          user_lat: 52.509677,\n          user_long: 13.370559\n        };\n        this.getPropertyData(defaultLocation.user_lat, defaultLocation.user_long);\n        // console.error(err);\n      }\n    );\n  }\n\n  private convertToNumber(objects) {\n    // tslint:disable-next-line:prefer-for-of\n    for (let i = 0; i < objects.length; i++) {\n      const obj = objects[i];\n      for (const prop in obj) {\n        if (obj.hasOwnProperty(prop) && obj[prop] !== null && !isNaN(obj[prop])) {\n          obj[prop] = +obj[prop];\n        }\n      }\n    }\n    return objects;\n  }\n\n  private getPropertyData(lat, long) {\n    this.propertiesNearUserService.getPropertyBasedOnUserLocation(lat, long).subscribe(\n      (data) => {\n        this.properties = this.convertToNumber(data);\n        this.latitude = lat;\n        this.longitude = long;\n      }\n    );\n\n  }\n\n  private getLocationDetailsFromUserInput(searchQuery) {\n    const query: IGeocoding = {\n      address: searchQuery,\n      responseFormat: 'json'\n    };\n    this.userQueryGeocodingService.getSearchQueryLocationDetails(query);\n  }\n\n  private searchOnUserInput() {\n    this.searchQueryChanged.pipe(debounceTime(2000), distinctUntilChanged()).subscribe(\n      (model) => {\n        this.searchQuery = model;\n        this.getLocationDetailsFromUserInput(model);\n      }\n    );\n  }\n\n}\n\n// Can be moved to a new folder types\ninterface Marker {\n  lat: number;\n  lng: number;\n  label?: string;\n  draggable: boolean;\n}\n\ninterface IGeocoding {\n  address: string;\n  responseFormat: string;\n}\n","import { NgModule } from '@angular/core';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { CdkStepperModule } from '@angular/cdk/stepper';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { CdkTreeModule } from '@angular/cdk/tree';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTreeModule } from '@angular/material/tree';\n\n@NgModule({\n  exports: [\n    A11yModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    PortalModule,\n    ScrollingModule,\n  ]\n})\nexport class MaterialModule { }\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Injectable()\nexport class DataSourceService {\n    constructor(private http: HttpClient) { }\n    private requestHeaders = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n    get(url, headerOptions?) {\n        const requestEndPoint = `${environment.serviceEndPoints}/${url}`;\n        if (headerOptions) {\n            this.requestHeaders = headerOptions;\n        }\n        return this.http.get(environment.serviceEndPoints, this.requestHeaders);\n    }\n\n    post(url, body, headerOptions?) {\n        const requestEndPoint = `${environment.serviceEndPoints}/${url}`;\n        if (headerOptions) {\n            this.requestHeaders = headerOptions;\n        }\n        return this.http.post(requestEndPoint, body, this.requestHeaders);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { maps } from '../../../endpoints/dev/maps';\nimport { environment } from 'src/environments/environment';\n@Injectable({\n  providedIn: 'root'\n})\nexport class GoogleMapGeocodingService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  get(params: IGeocoding) {\n    const requestURL = `${maps.GoogleGeoCoding}/${params.responseFormat}?address=${params.address}&key=${environment.GoogleMAPAPIKey}`;\n    return this.http.get(requestURL);\n  }\n}\n\ninterface IGeocoding {\n  address: string;\n  responseFormat: string;\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nimport { DataSourceService } from './datasource/datasource.service';\nimport { userServices } from '../../endpoints/dev/userdata';\n@Injectable()\nexport class GetPropertyByLocationService {\n    constructor(private dataSource: DataSourceService) { }\n    private lat;\n    private lng;\n    private propertyData$: Observable<any>;\n    getPropertyBasedOnUserLocation(latitude, longitude) {\n        const locationParams: ILocationParams = {\n            user_lat: latitude,\n            user_long: longitude\n        };\n        return this.dataSource.post(userServices.GetPropertiesByUserLocation, locationParams);\n    }\n\n}\n\ninterface ILocationParams {\n    user_lat: string | number;\n    user_long: string | number;\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nimport { DataSourceService } from './datasource/datasource.service';\nimport { GoogleMapGeocodingService } from './datasource/google-map-geocoding.service';\nimport { AppStoreService } from '../store/app-store.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SearchQueryDetailsService {\n\n  constructor(\n    private dataSource: DataSourceService,\n    private geoCodingService: GoogleMapGeocodingService,\n    private store: AppStoreService\n  ) { }\n\n  /**\n   *\n   * @param queryParams send the address and response format\n   * @description subscribe to state for update search query information\n   */\n  getSearchQueryLocationDetails(queryParams?) {\n    return this.geoCodingService.get(queryParams).subscribe(\n      (geoCodingInformation: any) => {\n        const locationCoords = geoCodingInformation.results[geoCodingInformation.results.length - 1].geometry.location;\n        this.store.add(locationCoords);\n      }\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { DataSourceService } from './datasource/datasource.service';\nimport { bookings } from '../../endpoints/dev/bookings';\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserBookingService {\n\n  constructor(\n    private dataSource: DataSourceService\n  ) { }\n\n  bookNewProperty(propertyId) {\n    const bookingReqBody = {\n      user_id: 8,\n      property_id: propertyId,\n    };\n    return this.dataSource.post(bookings.BookNew, bookingReqBody);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\n\n@Injectable()\nexport class UserLocationService {\n  constructor() {}\n  private lat;\n  private lng;\n\n  /**\n   * Tries HTML5 geolocation.\n   *\n   * Wraps the Geolocation API into an observable.\n   *\n   * @return An observable of Position\n   */\n  getCurrentPosition(): Observable<Position> {\n    return Observable.create((observer: Observer<Position>) => {\n      // Invokes getCurrentPosition method of Geolocation API.\n      navigator.geolocation.getCurrentPosition(\n        (position: Position) => {\n          observer.next(position);\n          observer.complete();\n        },\n        (error: PositionError) => {\n          console.log('Geolocation service: ' + error.message);\n          observer.error(error);\n        }\n      );\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ObservableStore } from '@codewithdan/observable-store';\nimport { of } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppStoreService extends ObservableStore<IStore> {\n\n  constructor() {\n    super({ trackStateHistory: true });\n    const initialState = {\n      geoCodingData: null,\n    };\n\n    this.setState(initialState, 'init_state');\n  }\n\n  get() {\n    const geoCodingData = this.getState().geoCodingData;\n    return of(geoCodingData);\n  }\n\n  add(data) {\n    const state = this.getState();\n    state.geoCodingData = data;\n    this.setState({ geoCodingData: state.geoCodingData }, 'add_geoCodingData');\n  }\n}\n\ninterface IStore {\n  geoCodingData: any;\n  // lat, lng\n}\n","export const bookings = {\n    BookNew: 'bookings/new'\n};\n","export enum maps {\n    GooglePlaces = 'https://maps.googleapis.com/maps/api/place/findplacefromtext/',\n    GoogleGeoCoding = 'https://maps.googleapis.com/maps/api/geocode'\n}\n","export const userServices = {\n    GetPropertiesByUserLocation: 'property/bylocation'\n};\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  GoogleMAPAPIKey: 'AIzaSyAYgEPaCX_KfngPWsnwXfIjOrgbh4Smvf8',\n  serviceEndPoints: 'http://localhost:3000'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}