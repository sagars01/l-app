{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-main/property-list/property-list.component.css","webpack:///./src/app/app-main/property-list/property-list.component.html","webpack:///./src/app/app-main/property-list/property-list.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/map/map-main/map-main.component.css","webpack:///./src/app/map/map-main/map-main.component.html","webpack:///./src/app/map/map-main/map-main.component.ts","webpack:///./src/app/material.module.ts","webpack:///./src/app/services/user-location.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC1tYWluL3Byb3BlcnR5LWxpc3QvcHJvcGVydHktbGlzdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<p>\\nproperty-list works!\\n</p>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-property-list',\n  templateUrl: './property-list.component.html',\n  styleUrls: ['./property-list.component.css']\n})\nexport class PropertyListComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"flex-container\\\">\\n  <div class=\\\"flex\\\" id=\\\"map\\\">\\n    <app-map-main></app-map-main>\\n  </div>\\n  <div class=\\\"flex\\\" id=\\\"userApp\\\">\\n    <app-property-list></app-property-list>\\n  </div>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'public';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AgmCoreModule } from '@agm/core';\nimport { MaterialModule } from './material.module';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { MapMainComponent } from './map/map-main/map-main.component';\nimport { PropertyListComponent } from './app-main/property-list/property-list.component';\nimport { UserLocationService } from './services/user-location.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MapMainComponent,\n    PropertyListComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MaterialModule,\n    AgmCoreModule.forRoot({\n      apiKey: 'put your api key'\n    }),\n    BrowserAnimationsModule,\n  ],\n  providers: [UserLocationService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"agm-map {\\n  height: 100%;\\n}\\n\\n:host {\\n  height: 100%;\\n}\\n\\n.map-wrapper {\\n  height: 100%;\\n  position: relative;\\n}\\n\\n.map-input {\\n  position: absolute;\\n  z-index: 1;\\n  background: #ffffffc4;\\n  width: 100%;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFwL21hcC1tYWluL21hcC1tYWluLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxZQUFZO0VBQ1osa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLFVBQVU7RUFDVixxQkFBcUI7RUFDckIsV0FBVztBQUNiIiwiZmlsZSI6InNyYy9hcHAvbWFwL21hcC1tYWluL21hcC1tYWluLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJhZ20tbWFwIHtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuXG46aG9zdCB7XG4gIGhlaWdodDogMTAwJTtcbn1cblxuLm1hcC13cmFwcGVyIHtcbiAgaGVpZ2h0OiAxMDAlO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi5tYXAtaW5wdXQge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHotaW5kZXg6IDE7XG4gIGJhY2tncm91bmQ6ICNmZmZmZmZjNDtcbiAgd2lkdGg6IDEwMCU7XG59XG4iXX0= */\"","module.exports = \"<div class=\\\"map-wrapper\\\">\\n  <div class=\\\"form-group map-input\\\">\\n    <form class=\\\"example-form\\\">\\n      <mat-form-field class=\\\"example-full-width width-100\\\">\\n        <input matInput placeholder=\\\"Search a place\\\">\\n      </mat-form-field>\\n    </form>\\n  </div>\\n  <agm-map [latitude]=\\\"latitude\\\" [longitude]=\\\"longitude\\\" [zoom]=\\\"zoom\\\">\\n    <agm-marker [latitude]=\\\"latitude\\\" [longitude]=\\\"longitude\\\"></agm-marker>\\n  </agm-map>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { UserLocationService } from '../../services/user-location.service';\n\n@Component({\n  selector: 'app-map-main',\n  templateUrl: './map-main.component.html',\n  styleUrls: ['./map-main.component.css']\n})\nexport class MapMainComponent implements OnInit {\n  constructor(private userLocation: UserLocationService) { }\n  userLocationData;\n  latitude;\n  longitude;\n  zoom = 16;\n\n  // tslint:disable-next-line:max-line-length\n  placeSearchAPI = 'https://maps.googleapis.com/maps/api/place/findplacefromtext/json?input=%2B61293744000&inputtype=phonenumber&fields=place_id&key=<YOUR_API_KEY>';\n\n  ngOnInit() {\n    this.userLocation.getCurrentPosition().subscribe(\n      userLocationData => {\n        console.log(userLocationData);\n        this.latitude = userLocationData.coords.latitude;\n        this.longitude = userLocationData.coords.longitude;\n        this.userLocationData = userLocationData;\n\n        // Once the location is received now call the backend API\n\n      },\n      err => {\n        console.error(err);\n      }\n    );\n  }\n\n\n}\n\n\ninterface marker {\n  lat: number;\n  lng: number;\n  label?: string;\n  draggable: boolean;\n}\n","import { NgModule } from '@angular/core';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { CdkStepperModule } from '@angular/cdk/stepper';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { CdkTreeModule } from '@angular/cdk/tree';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTreeModule } from '@angular/material/tree';\n\n@NgModule({\n  exports: [\n    A11yModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    PortalModule,\n    ScrollingModule,\n  ]\n})\nexport class MaterialModule { }\n","import { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs/Observable\";\nimport { Observer } from \"rxjs/Observer\";\n\n@Injectable()\nexport class UserLocationService {\n  constructor() {}\n  private lat;\n  private lng;\n\n  /**\n   * Tries HTML5 geolocation.\n   *\n   * Wraps the Geolocation API into an observable.\n   *\n   * @return An observable of Position\n   */\n  getCurrentPosition(): Observable<Position> {\n    return Observable.create((observer: Observer<Position>) => {\n      // Invokes getCurrentPosition method of Geolocation API.\n      navigator.geolocation.getCurrentPosition(\n        (position: Position) => {\n          observer.next(position);\n          observer.complete();\n        },\n        (error: PositionError) => {\n          console.log(\"Geolocation service: \" + error.message);\n          observer.error(error);\n        }\n      );\n    });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}